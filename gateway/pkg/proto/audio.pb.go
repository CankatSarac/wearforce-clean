// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: audio.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioConfig_Encoding int32

const (
	AudioConfig_ENCODING_UNSPECIFIED   AudioConfig_Encoding = 0
	AudioConfig_LINEAR16               AudioConfig_Encoding = 1
	AudioConfig_FLAC                   AudioConfig_Encoding = 2
	AudioConfig_MULAW                  AudioConfig_Encoding = 3
	AudioConfig_AMR                    AudioConfig_Encoding = 4
	AudioConfig_AMR_WB                 AudioConfig_Encoding = 5
	AudioConfig_OGG_OPUS               AudioConfig_Encoding = 6
	AudioConfig_SPEEX_WITH_HEADER_BYTE AudioConfig_Encoding = 7
	AudioConfig_WEBM_OPUS              AudioConfig_Encoding = 8
)

// Enum value maps for AudioConfig_Encoding.
var (
	AudioConfig_Encoding_name = map[int32]string{
		0: "ENCODING_UNSPECIFIED",
		1: "LINEAR16",
		2: "FLAC",
		3: "MULAW",
		4: "AMR",
		5: "AMR_WB",
		6: "OGG_OPUS",
		7: "SPEEX_WITH_HEADER_BYTE",
		8: "WEBM_OPUS",
	}
	AudioConfig_Encoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED":   0,
		"LINEAR16":               1,
		"FLAC":                   2,
		"MULAW":                  3,
		"AMR":                    4,
		"AMR_WB":                 5,
		"OGG_OPUS":               6,
		"SPEEX_WITH_HEADER_BYTE": 7,
		"WEBM_OPUS":              8,
	}
)

func (x AudioConfig_Encoding) Enum() *AudioConfig_Encoding {
	p := new(AudioConfig_Encoding)
	*p = x
	return p
}

func (x AudioConfig_Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioConfig_Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_audio_proto_enumTypes[0].Descriptor()
}

func (AudioConfig_Encoding) Type() protoreflect.EnumType {
	return &file_audio_proto_enumTypes[0]
}

func (x AudioConfig_Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioConfig_Encoding.Descriptor instead.
func (AudioConfig_Encoding) EnumDescriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{6, 0}
}

type VoiceConfig_Gender int32

const (
	VoiceConfig_GENDER_UNSPECIFIED VoiceConfig_Gender = 0
	VoiceConfig_MALE               VoiceConfig_Gender = 1
	VoiceConfig_FEMALE             VoiceConfig_Gender = 2
	VoiceConfig_NEUTRAL            VoiceConfig_Gender = 3
)

// Enum value maps for VoiceConfig_Gender.
var (
	VoiceConfig_Gender_name = map[int32]string{
		0: "GENDER_UNSPECIFIED",
		1: "MALE",
		2: "FEMALE",
		3: "NEUTRAL",
	}
	VoiceConfig_Gender_value = map[string]int32{
		"GENDER_UNSPECIFIED": 0,
		"MALE":               1,
		"FEMALE":             2,
		"NEUTRAL":            3,
	}
)

func (x VoiceConfig_Gender) Enum() *VoiceConfig_Gender {
	p := new(VoiceConfig_Gender)
	*p = x
	return p
}

func (x VoiceConfig_Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceConfig_Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_audio_proto_enumTypes[1].Descriptor()
}

func (VoiceConfig_Gender) Type() protoreflect.EnumType {
	return &file_audio_proto_enumTypes[1]
}

func (x VoiceConfig_Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoiceConfig_Gender.Descriptor instead.
func (VoiceConfig_Gender) EnumDescriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{7, 0}
}

type ControlMessage_Command int32

const (
	ControlMessage_COMMAND_UNSPECIFIED ControlMessage_Command = 0
	ControlMessage_START_RECORDING     ControlMessage_Command = 1
	ControlMessage_STOP_RECORDING      ControlMessage_Command = 2
	ControlMessage_PAUSE_RECORDING     ControlMessage_Command = 3
	ControlMessage_RESUME_RECORDING    ControlMessage_Command = 4
	ControlMessage_END_SESSION         ControlMessage_Command = 5
)

// Enum value maps for ControlMessage_Command.
var (
	ControlMessage_Command_name = map[int32]string{
		0: "COMMAND_UNSPECIFIED",
		1: "START_RECORDING",
		2: "STOP_RECORDING",
		3: "PAUSE_RECORDING",
		4: "RESUME_RECORDING",
		5: "END_SESSION",
	}
	ControlMessage_Command_value = map[string]int32{
		"COMMAND_UNSPECIFIED": 0,
		"START_RECORDING":     1,
		"STOP_RECORDING":      2,
		"PAUSE_RECORDING":     3,
		"RESUME_RECORDING":    4,
		"END_SESSION":         5,
	}
)

func (x ControlMessage_Command) Enum() *ControlMessage_Command {
	p := new(ControlMessage_Command)
	*p = x
	return p
}

func (x ControlMessage_Command) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlMessage_Command) Descriptor() protoreflect.EnumDescriptor {
	return file_audio_proto_enumTypes[2].Descriptor()
}

func (ControlMessage_Command) Type() protoreflect.EnumType {
	return &file_audio_proto_enumTypes[2]
}

func (x ControlMessage_Command) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlMessage_Command.Descriptor instead.
func (ControlMessage_Command) EnumDescriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{13, 0}
}

type StatusMessage_Status int32

const (
	StatusMessage_STATUS_UNSPECIFIED StatusMessage_Status = 0
	StatusMessage_RECORDING          StatusMessage_Status = 1
	StatusMessage_PROCESSING         StatusMessage_Status = 2
	StatusMessage_COMPLETED          StatusMessage_Status = 3
	StatusMessage_ERROR              StatusMessage_Status = 4
	StatusMessage_IDLE               StatusMessage_Status = 5
)

// Enum value maps for StatusMessage_Status.
var (
	StatusMessage_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "RECORDING",
		2: "PROCESSING",
		3: "COMPLETED",
		4: "ERROR",
		5: "IDLE",
	}
	StatusMessage_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"RECORDING":          1,
		"PROCESSING":         2,
		"COMPLETED":          3,
		"ERROR":              4,
		"IDLE":               5,
	}
)

func (x StatusMessage_Status) Enum() *StatusMessage_Status {
	p := new(StatusMessage_Status)
	*p = x
	return p
}

func (x StatusMessage_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusMessage_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_audio_proto_enumTypes[3].Descriptor()
}

func (StatusMessage_Status) Type() protoreflect.EnumType {
	return &file_audio_proto_enumTypes[3]
}

func (x StatusMessage_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusMessage_Status.Descriptor instead.
func (StatusMessage_Status) EnumDescriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{14, 0}
}

type AudioRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*AudioRequest_Config
	//	*AudioRequest_AudioData
	//	*AudioRequest_TextData
	//	*AudioRequest_Control
	Request       isAudioRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioRequest) Reset() {
	*x = AudioRequest{}
	mi := &file_audio_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRequest) ProtoMessage() {}

func (x *AudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRequest.ProtoReflect.Descriptor instead.
func (*AudioRequest) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{0}
}

func (x *AudioRequest) GetRequest() isAudioRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AudioRequest) GetConfig() *AudioConfig {
	if x != nil {
		if x, ok := x.Request.(*AudioRequest_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *AudioRequest) GetAudioData() *AudioData {
	if x != nil {
		if x, ok := x.Request.(*AudioRequest_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *AudioRequest) GetTextData() *TextData {
	if x != nil {
		if x, ok := x.Request.(*AudioRequest_TextData); ok {
			return x.TextData
		}
	}
	return nil
}

func (x *AudioRequest) GetControl() *ControlMessage {
	if x != nil {
		if x, ok := x.Request.(*AudioRequest_Control); ok {
			return x.Control
		}
	}
	return nil
}

type isAudioRequest_Request interface {
	isAudioRequest_Request()
}

type AudioRequest_Config struct {
	Config *AudioConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type AudioRequest_AudioData struct {
	AudioData *AudioData `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3,oneof"`
}

type AudioRequest_TextData struct {
	TextData *TextData `protobuf:"bytes,3,opt,name=text_data,json=textData,proto3,oneof"`
}

type AudioRequest_Control struct {
	Control *ControlMessage `protobuf:"bytes,4,opt,name=control,proto3,oneof"`
}

func (*AudioRequest_Config) isAudioRequest_Request() {}

func (*AudioRequest_AudioData) isAudioRequest_Request() {}

func (*AudioRequest_TextData) isAudioRequest_Request() {}

func (*AudioRequest_Control) isAudioRequest_Request() {}

type AudioResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*AudioResponse_Transcription
	//	*AudioResponse_AudioData
	//	*AudioResponse_Error
	//	*AudioResponse_Status
	Response      isAudioResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioResponse) Reset() {
	*x = AudioResponse{}
	mi := &file_audio_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioResponse) ProtoMessage() {}

func (x *AudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioResponse.ProtoReflect.Descriptor instead.
func (*AudioResponse) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{1}
}

func (x *AudioResponse) GetResponse() isAudioResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AudioResponse) GetTranscription() *TranscriptionResult {
	if x != nil {
		if x, ok := x.Response.(*AudioResponse_Transcription); ok {
			return x.Transcription
		}
	}
	return nil
}

func (x *AudioResponse) GetAudioData() *AudioData {
	if x != nil {
		if x, ok := x.Response.(*AudioResponse_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *AudioResponse) GetError() *ErrorResponse {
	if x != nil {
		if x, ok := x.Response.(*AudioResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *AudioResponse) GetStatus() *StatusMessage {
	if x != nil {
		if x, ok := x.Response.(*AudioResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

type isAudioResponse_Response interface {
	isAudioResponse_Response()
}

type AudioResponse_Transcription struct {
	Transcription *TranscriptionResult `protobuf:"bytes,1,opt,name=transcription,proto3,oneof"`
}

type AudioResponse_AudioData struct {
	AudioData *AudioData `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3,oneof"`
}

type AudioResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type AudioResponse_Status struct {
	Status *StatusMessage `protobuf:"bytes,4,opt,name=status,proto3,oneof"`
}

func (*AudioResponse_Transcription) isAudioResponse_Response() {}

func (*AudioResponse_AudioData) isAudioResponse_Response() {}

func (*AudioResponse_Error) isAudioResponse_Response() {}

func (*AudioResponse_Status) isAudioResponse_Response() {}

type SttRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*SttRequest_Config
	//	*SttRequest_AudioData
	Request       isSttRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SttRequest) Reset() {
	*x = SttRequest{}
	mi := &file_audio_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SttRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SttRequest) ProtoMessage() {}

func (x *SttRequest) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SttRequest.ProtoReflect.Descriptor instead.
func (*SttRequest) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{2}
}

func (x *SttRequest) GetRequest() isSttRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SttRequest) GetConfig() *AudioConfig {
	if x != nil {
		if x, ok := x.Request.(*SttRequest_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *SttRequest) GetAudioData() *AudioData {
	if x != nil {
		if x, ok := x.Request.(*SttRequest_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

type isSttRequest_Request interface {
	isSttRequest_Request()
}

type SttRequest_Config struct {
	Config *AudioConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type SttRequest_AudioData struct {
	AudioData *AudioData `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3,oneof"`
}

func (*SttRequest_Config) isSttRequest_Request() {}

func (*SttRequest_AudioData) isSttRequest_Request() {}

type SttResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*SttResponse_Transcription
	//	*SttResponse_Error
	Response      isSttResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SttResponse) Reset() {
	*x = SttResponse{}
	mi := &file_audio_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SttResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SttResponse) ProtoMessage() {}

func (x *SttResponse) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SttResponse.ProtoReflect.Descriptor instead.
func (*SttResponse) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{3}
}

func (x *SttResponse) GetResponse() isSttResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SttResponse) GetTranscription() *TranscriptionResult {
	if x != nil {
		if x, ok := x.Response.(*SttResponse_Transcription); ok {
			return x.Transcription
		}
	}
	return nil
}

func (x *SttResponse) GetError() *ErrorResponse {
	if x != nil {
		if x, ok := x.Response.(*SttResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isSttResponse_Response interface {
	isSttResponse_Response()
}

type SttResponse_Transcription struct {
	Transcription *TranscriptionResult `protobuf:"bytes,1,opt,name=transcription,proto3,oneof"`
}

type SttResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SttResponse_Transcription) isSttResponse_Response() {}

func (*SttResponse_Error) isSttResponse_Response() {}

type TtsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	VoiceConfig   *VoiceConfig           `protobuf:"bytes,2,opt,name=voice_config,json=voiceConfig,proto3" json:"voice_config,omitempty"`
	AudioConfig   *AudioConfig           `protobuf:"bytes,3,opt,name=audio_config,json=audioConfig,proto3" json:"audio_config,omitempty"`
	LanguageCode  string                 `protobuf:"bytes,4,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TtsRequest) Reset() {
	*x = TtsRequest{}
	mi := &file_audio_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TtsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TtsRequest) ProtoMessage() {}

func (x *TtsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TtsRequest.ProtoReflect.Descriptor instead.
func (*TtsRequest) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{4}
}

func (x *TtsRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TtsRequest) GetVoiceConfig() *VoiceConfig {
	if x != nil {
		return x.VoiceConfig
	}
	return nil
}

func (x *TtsRequest) GetAudioConfig() *AudioConfig {
	if x != nil {
		return x.AudioConfig
	}
	return nil
}

func (x *TtsRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type TtsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*TtsResponse_AudioData
	//	*TtsResponse_Error
	//	*TtsResponse_Status
	Response      isTtsResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TtsResponse) Reset() {
	*x = TtsResponse{}
	mi := &file_audio_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TtsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TtsResponse) ProtoMessage() {}

func (x *TtsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TtsResponse.ProtoReflect.Descriptor instead.
func (*TtsResponse) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{5}
}

func (x *TtsResponse) GetResponse() isTtsResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *TtsResponse) GetAudioData() *AudioData {
	if x != nil {
		if x, ok := x.Response.(*TtsResponse_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *TtsResponse) GetError() *ErrorResponse {
	if x != nil {
		if x, ok := x.Response.(*TtsResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *TtsResponse) GetStatus() *StatusMessage {
	if x != nil {
		if x, ok := x.Response.(*TtsResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

type isTtsResponse_Response interface {
	isTtsResponse_Response()
}

type TtsResponse_AudioData struct {
	AudioData *AudioData `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3,oneof"`
}

type TtsResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type TtsResponse_Status struct {
	Status *StatusMessage `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

func (*TtsResponse_AudioData) isTtsResponse_Response() {}

func (*TtsResponse_Error) isTtsResponse_Response() {}

func (*TtsResponse_Status) isTtsResponse_Response() {}

type AudioConfig struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Encoding                   AudioConfig_Encoding   `protobuf:"varint,1,opt,name=encoding,proto3,enum=wearforce.gateway.v1.AudioConfig_Encoding" json:"encoding,omitempty"`
	SampleRateHertz            int32                  `protobuf:"varint,2,opt,name=sample_rate_hertz,json=sampleRateHertz,proto3" json:"sample_rate_hertz,omitempty"`
	AudioChannelCount          int32                  `protobuf:"varint,3,opt,name=audio_channel_count,json=audioChannelCount,proto3" json:"audio_channel_count,omitempty"`
	LanguageCode               string                 `protobuf:"bytes,4,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	EnableWordTimeOffsets      bool                   `protobuf:"varint,5,opt,name=enable_word_time_offsets,json=enableWordTimeOffsets,proto3" json:"enable_word_time_offsets,omitempty"`
	EnableAutomaticPunctuation bool                   `protobuf:"varint,6,opt,name=enable_automatic_punctuation,json=enableAutomaticPunctuation,proto3" json:"enable_automatic_punctuation,omitempty"`
	SpeechContexts             []string               `protobuf:"bytes,7,rep,name=speech_contexts,json=speechContexts,proto3" json:"speech_contexts,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *AudioConfig) Reset() {
	*x = AudioConfig{}
	mi := &file_audio_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioConfig) ProtoMessage() {}

func (x *AudioConfig) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioConfig.ProtoReflect.Descriptor instead.
func (*AudioConfig) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{6}
}

func (x *AudioConfig) GetEncoding() AudioConfig_Encoding {
	if x != nil {
		return x.Encoding
	}
	return AudioConfig_ENCODING_UNSPECIFIED
}

func (x *AudioConfig) GetSampleRateHertz() int32 {
	if x != nil {
		return x.SampleRateHertz
	}
	return 0
}

func (x *AudioConfig) GetAudioChannelCount() int32 {
	if x != nil {
		return x.AudioChannelCount
	}
	return 0
}

func (x *AudioConfig) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *AudioConfig) GetEnableWordTimeOffsets() bool {
	if x != nil {
		return x.EnableWordTimeOffsets
	}
	return false
}

func (x *AudioConfig) GetEnableAutomaticPunctuation() bool {
	if x != nil {
		return x.EnableAutomaticPunctuation
	}
	return false
}

func (x *AudioConfig) GetSpeechContexts() []string {
	if x != nil {
		return x.SpeechContexts
	}
	return nil
}

type VoiceConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VoiceName     string                 `protobuf:"bytes,1,opt,name=voice_name,json=voiceName,proto3" json:"voice_name,omitempty"`
	LanguageCode  string                 `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	Gender        VoiceConfig_Gender     `protobuf:"varint,3,opt,name=gender,proto3,enum=wearforce.gateway.v1.VoiceConfig_Gender" json:"gender,omitempty"`
	SpeakingRate  float32                `protobuf:"fixed32,4,opt,name=speaking_rate,json=speakingRate,proto3" json:"speaking_rate,omitempty"`
	Pitch         float32                `protobuf:"fixed32,5,opt,name=pitch,proto3" json:"pitch,omitempty"`
	VolumeGainDb  float32                `protobuf:"fixed32,6,opt,name=volume_gain_db,json=volumeGainDb,proto3" json:"volume_gain_db,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceConfig) Reset() {
	*x = VoiceConfig{}
	mi := &file_audio_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceConfig) ProtoMessage() {}

func (x *VoiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceConfig.ProtoReflect.Descriptor instead.
func (*VoiceConfig) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{7}
}

func (x *VoiceConfig) GetVoiceName() string {
	if x != nil {
		return x.VoiceName
	}
	return ""
}

func (x *VoiceConfig) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *VoiceConfig) GetGender() VoiceConfig_Gender {
	if x != nil {
		return x.Gender
	}
	return VoiceConfig_GENDER_UNSPECIFIED
}

func (x *VoiceConfig) GetSpeakingRate() float32 {
	if x != nil {
		return x.SpeakingRate
	}
	return 0
}

func (x *VoiceConfig) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *VoiceConfig) GetVolumeGainDb() float32 {
	if x != nil {
		return x.VolumeGainDb
	}
	return 0
}

type AudioData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Content        []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SequenceNumber int64                  `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Duration       *durationpb.Duration   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AudioData) Reset() {
	*x = AudioData{}
	mi := &file_audio_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioData) ProtoMessage() {}

func (x *AudioData) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioData.ProtoReflect.Descriptor instead.
func (*AudioData) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{8}
}

func (x *AudioData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *AudioData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AudioData) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *AudioData) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type TextData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	LanguageCode  string                 `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextData) Reset() {
	*x = TextData{}
	mi := &file_audio_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextData) ProtoMessage() {}

func (x *TextData) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextData.ProtoReflect.Descriptor instead.
func (*TextData) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{9}
}

func (x *TextData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TextData) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *TextData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TranscriptionResult struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Alternatives  []*TranscriptAlternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	IsFinal       bool                     `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	Stability     float32                  `protobuf:"fixed32,3,opt,name=stability,proto3" json:"stability,omitempty"`
	ResultEndTime *durationpb.Duration     `protobuf:"bytes,4,opt,name=result_end_time,json=resultEndTime,proto3" json:"result_end_time,omitempty"`
	LanguageCode  string                   `protobuf:"bytes,5,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptionResult) Reset() {
	*x = TranscriptionResult{}
	mi := &file_audio_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptionResult) ProtoMessage() {}

func (x *TranscriptionResult) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptionResult.ProtoReflect.Descriptor instead.
func (*TranscriptionResult) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{10}
}

func (x *TranscriptionResult) GetAlternatives() []*TranscriptAlternative {
	if x != nil {
		return x.Alternatives
	}
	return nil
}

func (x *TranscriptionResult) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *TranscriptionResult) GetStability() float32 {
	if x != nil {
		return x.Stability
	}
	return 0
}

func (x *TranscriptionResult) GetResultEndTime() *durationpb.Duration {
	if x != nil {
		return x.ResultEndTime
	}
	return nil
}

func (x *TranscriptionResult) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type TranscriptAlternative struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transcript    string                 `protobuf:"bytes,1,opt,name=transcript,proto3" json:"transcript,omitempty"`
	Confidence    float32                `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Words         []*WordInfo            `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptAlternative) Reset() {
	*x = TranscriptAlternative{}
	mi := &file_audio_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptAlternative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptAlternative) ProtoMessage() {}

func (x *TranscriptAlternative) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptAlternative.ProtoReflect.Descriptor instead.
func (*TranscriptAlternative) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{11}
}

func (x *TranscriptAlternative) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *TranscriptAlternative) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *TranscriptAlternative) GetWords() []*WordInfo {
	if x != nil {
		return x.Words
	}
	return nil
}

type WordInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     *durationpb.Duration   `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *durationpb.Duration   `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Word          string                 `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	Confidence    float32                `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordInfo) Reset() {
	*x = WordInfo{}
	mi := &file_audio_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordInfo) ProtoMessage() {}

func (x *WordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordInfo.ProtoReflect.Descriptor instead.
func (*WordInfo) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{12}
}

func (x *WordInfo) GetStartTime() *durationpb.Duration {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *WordInfo) GetEndTime() *durationpb.Duration {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *WordInfo) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordInfo) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type ControlMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       ControlMessage_Command `protobuf:"varint,1,opt,name=command,proto3,enum=wearforce.gateway.v1.ControlMessage_Command" json:"command,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	mi := &file_audio_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{13}
}

func (x *ControlMessage) GetCommand() ControlMessage_Command {
	if x != nil {
		return x.Command
	}
	return ControlMessage_COMMAND_UNSPECIFIED
}

func (x *ControlMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ControlMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StatusMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        StatusMessage_Status   `protobuf:"varint,1,opt,name=status,proto3,enum=wearforce.gateway.v1.StatusMessage_Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusMessage) Reset() {
	*x = StatusMessage{}
	mi := &file_audio_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMessage) ProtoMessage() {}

func (x *StatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMessage.ProtoReflect.Descriptor instead.
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{14}
}

func (x *StatusMessage) GetStatus() StatusMessage_Status {
	if x != nil {
		return x.Status
	}
	return StatusMessage_STATUS_UNSPECIFIED
}

func (x *StatusMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       []string               `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_audio_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{15}
}

func (x *ErrorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ErrorResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AudioConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceType    string                 `protobuf:"bytes,1,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Platform      string                 `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioConfigRequest) Reset() {
	*x = AudioConfigRequest{}
	mi := &file_audio_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioConfigRequest) ProtoMessage() {}

func (x *AudioConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioConfigRequest.ProtoReflect.Descriptor instead.
func (*AudioConfigRequest) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{16}
}

func (x *AudioConfigRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *AudioConfigRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type AudioConfigResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SupportedConfigs   []*AudioConfig         `protobuf:"bytes,1,rep,name=supported_configs,json=supportedConfigs,proto3" json:"supported_configs,omitempty"`
	SupportedVoices    []*VoiceConfig         `protobuf:"bytes,2,rep,name=supported_voices,json=supportedVoices,proto3" json:"supported_voices,omitempty"`
	SupportedLanguages []string               `protobuf:"bytes,3,rep,name=supported_languages,json=supportedLanguages,proto3" json:"supported_languages,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AudioConfigResponse) Reset() {
	*x = AudioConfigResponse{}
	mi := &file_audio_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioConfigResponse) ProtoMessage() {}

func (x *AudioConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioConfigResponse.ProtoReflect.Descriptor instead.
func (*AudioConfigResponse) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{17}
}

func (x *AudioConfigResponse) GetSupportedConfigs() []*AudioConfig {
	if x != nil {
		return x.SupportedConfigs
	}
	return nil
}

func (x *AudioConfigResponse) GetSupportedVoices() []*VoiceConfig {
	if x != nil {
		return x.SupportedVoices
	}
	return nil
}

func (x *AudioConfigResponse) GetSupportedLanguages() []string {
	if x != nil {
		return x.SupportedLanguages
	}
	return nil
}

var File_audio_proto protoreflect.FileDescriptor

const file_audio_proto_rawDesc = "" +
	"\n" +
	"\vaudio.proto\x12\x14wearforce.gateway.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\x99\x02\n" +
	"\fAudioRequest\x12;\n" +
	"\x06config\x18\x01 \x01(\v2!.wearforce.gateway.v1.AudioConfigH\x00R\x06config\x12@\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\v2\x1f.wearforce.gateway.v1.AudioDataH\x00R\taudioData\x12=\n" +
	"\ttext_data\x18\x03 \x01(\v2\x1e.wearforce.gateway.v1.TextDataH\x00R\btextData\x12@\n" +
	"\acontrol\x18\x04 \x01(\v2$.wearforce.gateway.v1.ControlMessageH\x00R\acontrolB\t\n" +
	"\arequest\"\xac\x02\n" +
	"\rAudioResponse\x12Q\n" +
	"\rtranscription\x18\x01 \x01(\v2).wearforce.gateway.v1.TranscriptionResultH\x00R\rtranscription\x12@\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\v2\x1f.wearforce.gateway.v1.AudioDataH\x00R\taudioData\x12;\n" +
	"\x05error\x18\x03 \x01(\v2#.wearforce.gateway.v1.ErrorResponseH\x00R\x05error\x12=\n" +
	"\x06status\x18\x04 \x01(\v2#.wearforce.gateway.v1.StatusMessageH\x00R\x06statusB\n" +
	"\n" +
	"\bresponse\"\x96\x01\n" +
	"\n" +
	"SttRequest\x12;\n" +
	"\x06config\x18\x01 \x01(\v2!.wearforce.gateway.v1.AudioConfigH\x00R\x06config\x12@\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\v2\x1f.wearforce.gateway.v1.AudioDataH\x00R\taudioDataB\t\n" +
	"\arequest\"\xa9\x01\n" +
	"\vSttResponse\x12Q\n" +
	"\rtranscription\x18\x01 \x01(\v2).wearforce.gateway.v1.TranscriptionResultH\x00R\rtranscription\x12;\n" +
	"\x05error\x18\x02 \x01(\v2#.wearforce.gateway.v1.ErrorResponseH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"\xd1\x01\n" +
	"\n" +
	"TtsRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12D\n" +
	"\fvoice_config\x18\x02 \x01(\v2!.wearforce.gateway.v1.VoiceConfigR\vvoiceConfig\x12D\n" +
	"\faudio_config\x18\x03 \x01(\v2!.wearforce.gateway.v1.AudioConfigR\vaudioConfig\x12#\n" +
	"\rlanguage_code\x18\x04 \x01(\tR\flanguageCode\"\xd7\x01\n" +
	"\vTtsResponse\x12@\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\v2\x1f.wearforce.gateway.v1.AudioDataH\x00R\taudioData\x12;\n" +
	"\x05error\x18\x02 \x01(\v2#.wearforce.gateway.v1.ErrorResponseH\x00R\x05error\x12=\n" +
	"\x06status\x18\x03 \x01(\v2#.wearforce.gateway.v1.StatusMessageH\x00R\x06statusB\n" +
	"\n" +
	"\bresponse\"\x92\x04\n" +
	"\vAudioConfig\x12F\n" +
	"\bencoding\x18\x01 \x01(\x0e2*.wearforce.gateway.v1.AudioConfig.EncodingR\bencoding\x12*\n" +
	"\x11sample_rate_hertz\x18\x02 \x01(\x05R\x0fsampleRateHertz\x12.\n" +
	"\x13audio_channel_count\x18\x03 \x01(\x05R\x11audioChannelCount\x12#\n" +
	"\rlanguage_code\x18\x04 \x01(\tR\flanguageCode\x127\n" +
	"\x18enable_word_time_offsets\x18\x05 \x01(\bR\x15enableWordTimeOffsets\x12@\n" +
	"\x1cenable_automatic_punctuation\x18\x06 \x01(\bR\x1aenableAutomaticPunctuation\x12'\n" +
	"\x0fspeech_contexts\x18\a \x03(\tR\x0espeechContexts\"\x95\x01\n" +
	"\bEncoding\x12\x18\n" +
	"\x14ENCODING_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bLINEAR16\x10\x01\x12\b\n" +
	"\x04FLAC\x10\x02\x12\t\n" +
	"\x05MULAW\x10\x03\x12\a\n" +
	"\x03AMR\x10\x04\x12\n" +
	"\n" +
	"\x06AMR_WB\x10\x05\x12\f\n" +
	"\bOGG_OPUS\x10\x06\x12\x1a\n" +
	"\x16SPEEX_WITH_HEADER_BYTE\x10\a\x12\r\n" +
	"\tWEBM_OPUS\x10\b\"\xb9\x02\n" +
	"\vVoiceConfig\x12\x1d\n" +
	"\n" +
	"voice_name\x18\x01 \x01(\tR\tvoiceName\x12#\n" +
	"\rlanguage_code\x18\x02 \x01(\tR\flanguageCode\x12@\n" +
	"\x06gender\x18\x03 \x01(\x0e2(.wearforce.gateway.v1.VoiceConfig.GenderR\x06gender\x12#\n" +
	"\rspeaking_rate\x18\x04 \x01(\x02R\fspeakingRate\x12\x14\n" +
	"\x05pitch\x18\x05 \x01(\x02R\x05pitch\x12$\n" +
	"\x0evolume_gain_db\x18\x06 \x01(\x02R\fvolumeGainDb\"C\n" +
	"\x06Gender\x12\x16\n" +
	"\x12GENDER_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04MALE\x10\x01\x12\n" +
	"\n" +
	"\x06FEMALE\x10\x02\x12\v\n" +
	"\aNEUTRAL\x10\x03\"\xbf\x01\n" +
	"\tAudioData\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\x03R\x0esequenceNumber\x125\n" +
	"\bduration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\bduration\"\x83\x01\n" +
	"\bTextData\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12#\n" +
	"\rlanguage_code\x18\x02 \x01(\tR\flanguageCode\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x87\x02\n" +
	"\x13TranscriptionResult\x12O\n" +
	"\falternatives\x18\x01 \x03(\v2+.wearforce.gateway.v1.TranscriptAlternativeR\falternatives\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal\x12\x1c\n" +
	"\tstability\x18\x03 \x01(\x02R\tstability\x12A\n" +
	"\x0fresult_end_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\rresultEndTime\x12#\n" +
	"\rlanguage_code\x18\x05 \x01(\tR\flanguageCode\"\x8d\x01\n" +
	"\x15TranscriptAlternative\x12\x1e\n" +
	"\n" +
	"transcript\x18\x01 \x01(\tR\n" +
	"transcript\x12\x1e\n" +
	"\n" +
	"confidence\x18\x02 \x01(\x02R\n" +
	"confidence\x124\n" +
	"\x05words\x18\x03 \x03(\v2\x1e.wearforce.gateway.v1.WordInfoR\x05words\"\xae\x01\n" +
	"\bWordInfo\x128\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\tstartTime\x124\n" +
	"\bend_time\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\aendTime\x12\x12\n" +
	"\x04word\x18\x03 \x01(\tR\x04word\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x02R\n" +
	"confidence\"\xa9\x03\n" +
	"\x0eControlMessage\x12F\n" +
	"\acommand\x18\x01 \x01(\x0e2,.wearforce.gateway.v1.ControlMessage.CommandR\acommand\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12N\n" +
	"\bmetadata\x18\x03 \x03(\v22.wearforce.gateway.v1.ControlMessage.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x01\n" +
	"\aCommand\x12\x17\n" +
	"\x13COMMAND_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSTART_RECORDING\x10\x01\x12\x12\n" +
	"\x0eSTOP_RECORDING\x10\x02\x12\x13\n" +
	"\x0fPAUSE_RECORDING\x10\x03\x12\x14\n" +
	"\x10RESUME_RECORDING\x10\x04\x12\x0f\n" +
	"\vEND_SESSION\x10\x05\"\x8c\x02\n" +
	"\rStatusMessage\x12B\n" +
	"\x06status\x18\x01 \x01(\x0e2*.wearforce.gateway.v1.StatusMessage.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"c\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tRECORDING\x10\x01\x12\x0e\n" +
	"\n" +
	"PROCESSING\x10\x02\x12\r\n" +
	"\tCOMPLETED\x10\x03\x12\t\n" +
	"\x05ERROR\x10\x04\x12\b\n" +
	"\x04IDLE\x10\x05\"\x91\x01\n" +
	"\rErrorResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x03(\tR\adetails\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"Q\n" +
	"\x12AudioConfigRequest\x12\x1f\n" +
	"\vdevice_type\x18\x01 \x01(\tR\n" +
	"deviceType\x12\x1a\n" +
	"\bplatform\x18\x02 \x01(\tR\bplatform\"\xe4\x01\n" +
	"\x13AudioConfigResponse\x12N\n" +
	"\x11supported_configs\x18\x01 \x03(\v2!.wearforce.gateway.v1.AudioConfigR\x10supportedConfigs\x12L\n" +
	"\x10supported_voices\x18\x02 \x03(\v2!.wearforce.gateway.v1.VoiceConfigR\x0fsupportedVoices\x12/\n" +
	"\x13supported_languages\x18\x03 \x03(\tR\x12supportedLanguages2\x92\x03\n" +
	"\x15AudioStreamingService\x12b\n" +
	"\x13BiDirectionalStream\x12\".wearforce.gateway.v1.AudioRequest\x1a#.wearforce.gateway.v1.AudioResponse(\x010\x01\x12W\n" +
	"\fSpeechToText\x12 .wearforce.gateway.v1.SttRequest\x1a!.wearforce.gateway.v1.SttResponse(\x010\x01\x12U\n" +
	"\fTextToSpeech\x12 .wearforce.gateway.v1.TtsRequest\x1a!.wearforce.gateway.v1.TtsResponse0\x01\x12e\n" +
	"\x0eGetAudioConfig\x12(.wearforce.gateway.v1.AudioConfigRequest\x1a).wearforce.gateway.v1.AudioConfigResponseB(Z&github.com/wearforce/gateway/pkg/protob\x06proto3"

var (
	file_audio_proto_rawDescOnce sync.Once
	file_audio_proto_rawDescData []byte
)

func file_audio_proto_rawDescGZIP() []byte {
	file_audio_proto_rawDescOnce.Do(func() {
		file_audio_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_audio_proto_rawDesc), len(file_audio_proto_rawDesc)))
	})
	return file_audio_proto_rawDescData
}

var file_audio_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_audio_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_audio_proto_goTypes = []any{
	(AudioConfig_Encoding)(0),     // 0: wearforce.gateway.v1.AudioConfig.Encoding
	(VoiceConfig_Gender)(0),       // 1: wearforce.gateway.v1.VoiceConfig.Gender
	(ControlMessage_Command)(0),   // 2: wearforce.gateway.v1.ControlMessage.Command
	(StatusMessage_Status)(0),     // 3: wearforce.gateway.v1.StatusMessage.Status
	(*AudioRequest)(nil),          // 4: wearforce.gateway.v1.AudioRequest
	(*AudioResponse)(nil),         // 5: wearforce.gateway.v1.AudioResponse
	(*SttRequest)(nil),            // 6: wearforce.gateway.v1.SttRequest
	(*SttResponse)(nil),           // 7: wearforce.gateway.v1.SttResponse
	(*TtsRequest)(nil),            // 8: wearforce.gateway.v1.TtsRequest
	(*TtsResponse)(nil),           // 9: wearforce.gateway.v1.TtsResponse
	(*AudioConfig)(nil),           // 10: wearforce.gateway.v1.AudioConfig
	(*VoiceConfig)(nil),           // 11: wearforce.gateway.v1.VoiceConfig
	(*AudioData)(nil),             // 12: wearforce.gateway.v1.AudioData
	(*TextData)(nil),              // 13: wearforce.gateway.v1.TextData
	(*TranscriptionResult)(nil),   // 14: wearforce.gateway.v1.TranscriptionResult
	(*TranscriptAlternative)(nil), // 15: wearforce.gateway.v1.TranscriptAlternative
	(*WordInfo)(nil),              // 16: wearforce.gateway.v1.WordInfo
	(*ControlMessage)(nil),        // 17: wearforce.gateway.v1.ControlMessage
	(*StatusMessage)(nil),         // 18: wearforce.gateway.v1.StatusMessage
	(*ErrorResponse)(nil),         // 19: wearforce.gateway.v1.ErrorResponse
	(*AudioConfigRequest)(nil),    // 20: wearforce.gateway.v1.AudioConfigRequest
	(*AudioConfigResponse)(nil),   // 21: wearforce.gateway.v1.AudioConfigResponse
	nil,                           // 22: wearforce.gateway.v1.ControlMessage.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 23: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 24: google.protobuf.Duration
}
var file_audio_proto_depIdxs = []int32{
	10, // 0: wearforce.gateway.v1.AudioRequest.config:type_name -> wearforce.gateway.v1.AudioConfig
	12, // 1: wearforce.gateway.v1.AudioRequest.audio_data:type_name -> wearforce.gateway.v1.AudioData
	13, // 2: wearforce.gateway.v1.AudioRequest.text_data:type_name -> wearforce.gateway.v1.TextData
	17, // 3: wearforce.gateway.v1.AudioRequest.control:type_name -> wearforce.gateway.v1.ControlMessage
	14, // 4: wearforce.gateway.v1.AudioResponse.transcription:type_name -> wearforce.gateway.v1.TranscriptionResult
	12, // 5: wearforce.gateway.v1.AudioResponse.audio_data:type_name -> wearforce.gateway.v1.AudioData
	19, // 6: wearforce.gateway.v1.AudioResponse.error:type_name -> wearforce.gateway.v1.ErrorResponse
	18, // 7: wearforce.gateway.v1.AudioResponse.status:type_name -> wearforce.gateway.v1.StatusMessage
	10, // 8: wearforce.gateway.v1.SttRequest.config:type_name -> wearforce.gateway.v1.AudioConfig
	12, // 9: wearforce.gateway.v1.SttRequest.audio_data:type_name -> wearforce.gateway.v1.AudioData
	14, // 10: wearforce.gateway.v1.SttResponse.transcription:type_name -> wearforce.gateway.v1.TranscriptionResult
	19, // 11: wearforce.gateway.v1.SttResponse.error:type_name -> wearforce.gateway.v1.ErrorResponse
	11, // 12: wearforce.gateway.v1.TtsRequest.voice_config:type_name -> wearforce.gateway.v1.VoiceConfig
	10, // 13: wearforce.gateway.v1.TtsRequest.audio_config:type_name -> wearforce.gateway.v1.AudioConfig
	12, // 14: wearforce.gateway.v1.TtsResponse.audio_data:type_name -> wearforce.gateway.v1.AudioData
	19, // 15: wearforce.gateway.v1.TtsResponse.error:type_name -> wearforce.gateway.v1.ErrorResponse
	18, // 16: wearforce.gateway.v1.TtsResponse.status:type_name -> wearforce.gateway.v1.StatusMessage
	0,  // 17: wearforce.gateway.v1.AudioConfig.encoding:type_name -> wearforce.gateway.v1.AudioConfig.Encoding
	1,  // 18: wearforce.gateway.v1.VoiceConfig.gender:type_name -> wearforce.gateway.v1.VoiceConfig.Gender
	23, // 19: wearforce.gateway.v1.AudioData.timestamp:type_name -> google.protobuf.Timestamp
	24, // 20: wearforce.gateway.v1.AudioData.duration:type_name -> google.protobuf.Duration
	23, // 21: wearforce.gateway.v1.TextData.timestamp:type_name -> google.protobuf.Timestamp
	15, // 22: wearforce.gateway.v1.TranscriptionResult.alternatives:type_name -> wearforce.gateway.v1.TranscriptAlternative
	24, // 23: wearforce.gateway.v1.TranscriptionResult.result_end_time:type_name -> google.protobuf.Duration
	16, // 24: wearforce.gateway.v1.TranscriptAlternative.words:type_name -> wearforce.gateway.v1.WordInfo
	24, // 25: wearforce.gateway.v1.WordInfo.start_time:type_name -> google.protobuf.Duration
	24, // 26: wearforce.gateway.v1.WordInfo.end_time:type_name -> google.protobuf.Duration
	2,  // 27: wearforce.gateway.v1.ControlMessage.command:type_name -> wearforce.gateway.v1.ControlMessage.Command
	23, // 28: wearforce.gateway.v1.ControlMessage.timestamp:type_name -> google.protobuf.Timestamp
	22, // 29: wearforce.gateway.v1.ControlMessage.metadata:type_name -> wearforce.gateway.v1.ControlMessage.MetadataEntry
	3,  // 30: wearforce.gateway.v1.StatusMessage.status:type_name -> wearforce.gateway.v1.StatusMessage.Status
	23, // 31: wearforce.gateway.v1.StatusMessage.timestamp:type_name -> google.protobuf.Timestamp
	23, // 32: wearforce.gateway.v1.ErrorResponse.timestamp:type_name -> google.protobuf.Timestamp
	10, // 33: wearforce.gateway.v1.AudioConfigResponse.supported_configs:type_name -> wearforce.gateway.v1.AudioConfig
	11, // 34: wearforce.gateway.v1.AudioConfigResponse.supported_voices:type_name -> wearforce.gateway.v1.VoiceConfig
	4,  // 35: wearforce.gateway.v1.AudioStreamingService.BiDirectionalStream:input_type -> wearforce.gateway.v1.AudioRequest
	6,  // 36: wearforce.gateway.v1.AudioStreamingService.SpeechToText:input_type -> wearforce.gateway.v1.SttRequest
	8,  // 37: wearforce.gateway.v1.AudioStreamingService.TextToSpeech:input_type -> wearforce.gateway.v1.TtsRequest
	20, // 38: wearforce.gateway.v1.AudioStreamingService.GetAudioConfig:input_type -> wearforce.gateway.v1.AudioConfigRequest
	5,  // 39: wearforce.gateway.v1.AudioStreamingService.BiDirectionalStream:output_type -> wearforce.gateway.v1.AudioResponse
	7,  // 40: wearforce.gateway.v1.AudioStreamingService.SpeechToText:output_type -> wearforce.gateway.v1.SttResponse
	9,  // 41: wearforce.gateway.v1.AudioStreamingService.TextToSpeech:output_type -> wearforce.gateway.v1.TtsResponse
	21, // 42: wearforce.gateway.v1.AudioStreamingService.GetAudioConfig:output_type -> wearforce.gateway.v1.AudioConfigResponse
	39, // [39:43] is the sub-list for method output_type
	35, // [35:39] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_audio_proto_init() }
func file_audio_proto_init() {
	if File_audio_proto != nil {
		return
	}
	file_audio_proto_msgTypes[0].OneofWrappers = []any{
		(*AudioRequest_Config)(nil),
		(*AudioRequest_AudioData)(nil),
		(*AudioRequest_TextData)(nil),
		(*AudioRequest_Control)(nil),
	}
	file_audio_proto_msgTypes[1].OneofWrappers = []any{
		(*AudioResponse_Transcription)(nil),
		(*AudioResponse_AudioData)(nil),
		(*AudioResponse_Error)(nil),
		(*AudioResponse_Status)(nil),
	}
	file_audio_proto_msgTypes[2].OneofWrappers = []any{
		(*SttRequest_Config)(nil),
		(*SttRequest_AudioData)(nil),
	}
	file_audio_proto_msgTypes[3].OneofWrappers = []any{
		(*SttResponse_Transcription)(nil),
		(*SttResponse_Error)(nil),
	}
	file_audio_proto_msgTypes[5].OneofWrappers = []any{
		(*TtsResponse_AudioData)(nil),
		(*TtsResponse_Error)(nil),
		(*TtsResponse_Status)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_audio_proto_rawDesc), len(file_audio_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_audio_proto_goTypes,
		DependencyIndexes: file_audio_proto_depIdxs,
		EnumInfos:         file_audio_proto_enumTypes,
		MessageInfos:      file_audio_proto_msgTypes,
	}.Build()
	File_audio_proto = out.File
	file_audio_proto_goTypes = nil
	file_audio_proto_depIdxs = nil
}
