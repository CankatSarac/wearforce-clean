syntax = "proto3";

package wearforce.gateway.v1;

option go_package = "github.com/wearforce/gateway/pkg/proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

// AudioStreamingService provides bi-directional audio streaming for STT/TTS
service AudioStreamingService {
    // BiDirectionalStream handles both speech-to-text and text-to-speech
    rpc BiDirectionalStream(stream AudioRequest) returns (stream AudioResponse);
    
    // SpeechToText converts audio to text
    rpc SpeechToText(stream SttRequest) returns (stream SttResponse);
    
    // TextToSpeech converts text to audio
    rpc TextToSpeech(TtsRequest) returns (stream TtsResponse);
    
    // GetAudioConfig returns supported audio configurations
    rpc GetAudioConfig(AudioConfigRequest) returns (AudioConfigResponse);
}

message AudioRequest {
    oneof request {
        AudioConfig config = 1;
        AudioData audio_data = 2;
        TextData text_data = 3;
        ControlMessage control = 4;
    }
}

message AudioResponse {
    oneof response {
        TranscriptionResult transcription = 1;
        AudioData audio_data = 2;
        ErrorResponse error = 3;
        StatusMessage status = 4;
    }
}

message SttRequest {
    oneof request {
        AudioConfig config = 1;
        AudioData audio_data = 2;
    }
}

message SttResponse {
    oneof response {
        TranscriptionResult transcription = 1;
        ErrorResponse error = 2;
    }
}

message TtsRequest {
    string text = 1;
    VoiceConfig voice_config = 2;
    AudioConfig audio_config = 3;
    string language_code = 4;
}

message TtsResponse {
    oneof response {
        AudioData audio_data = 1;
        ErrorResponse error = 2;
        StatusMessage status = 3;
    }
}

message AudioConfig {
    enum Encoding {
        ENCODING_UNSPECIFIED = 0;
        LINEAR16 = 1;
        FLAC = 2;
        MULAW = 3;
        AMR = 4;
        AMR_WB = 5;
        OGG_OPUS = 6;
        SPEEX_WITH_HEADER_BYTE = 7;
        WEBM_OPUS = 8;
    }
    
    Encoding encoding = 1;
    int32 sample_rate_hertz = 2;
    int32 audio_channel_count = 3;
    string language_code = 4;
    bool enable_word_time_offsets = 5;
    bool enable_automatic_punctuation = 6;
    repeated string speech_contexts = 7;
}

message VoiceConfig {
    string voice_name = 1;
    string language_code = 2;
    enum Gender {
        GENDER_UNSPECIFIED = 0;
        MALE = 1;
        FEMALE = 2;
        NEUTRAL = 3;
    }
    Gender gender = 3;
    float speaking_rate = 4;
    float pitch = 5;
    float volume_gain_db = 6;
}

message AudioData {
    bytes content = 1;
    google.protobuf.Timestamp timestamp = 2;
    int64 sequence_number = 3;
    google.protobuf.Duration duration = 4;
}

message TextData {
    string content = 1;
    string language_code = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message TranscriptionResult {
    repeated TranscriptAlternative alternatives = 1;
    bool is_final = 2;
    float stability = 3;
    google.protobuf.Duration result_end_time = 4;
    string language_code = 5;
}

message TranscriptAlternative {
    string transcript = 1;
    float confidence = 2;
    repeated WordInfo words = 3;
}

message WordInfo {
    google.protobuf.Duration start_time = 1;
    google.protobuf.Duration end_time = 2;
    string word = 3;
    float confidence = 4;
}

message ControlMessage {
    enum Command {
        COMMAND_UNSPECIFIED = 0;
        START_RECORDING = 1;
        STOP_RECORDING = 2;
        PAUSE_RECORDING = 3;
        RESUME_RECORDING = 4;
        END_SESSION = 5;
    }
    Command command = 1;
    google.protobuf.Timestamp timestamp = 2;
    map<string, string> metadata = 3;
}

message StatusMessage {
    enum Status {
        STATUS_UNSPECIFIED = 0;
        RECORDING = 1;
        PROCESSING = 2;
        COMPLETED = 3;
        ERROR = 4;
        IDLE = 5;
    }
    Status status = 1;
    string message = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message ErrorResponse {
    int32 code = 1;
    string message = 2;
    repeated string details = 3;
    google.protobuf.Timestamp timestamp = 4;
}

message AudioConfigRequest {
    string device_type = 1;
    string platform = 2;
}

message AudioConfigResponse {
    repeated AudioConfig supported_configs = 1;
    repeated VoiceConfig supported_voices = 2;
    repeated string supported_languages = 3;
}