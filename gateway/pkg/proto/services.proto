syntax = "proto3";

package wearforce.gateway.v1;

option go_package = "github.com/wearforce/gateway/pkg/proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

// GatewayService provides core gateway functionality
service GatewayService {
    // Health check endpoint
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
    
    // Get service status and metrics
    rpc GetServiceStatus(ServiceStatusRequest) returns (ServiceStatusResponse);
    
    // Forward request to backend services
    rpc ForwardRequest(ForwardRequestData) returns (ForwardResponseData);
    
    // Batch forward multiple requests
    rpc BatchForward(BatchForwardRequest) returns (BatchForwardResponse);
}

// ServiceProxyService handles routing to backend services
service ServiceProxyService {
    // Forward to CRM service
    rpc ForwardToCRM(ProxyRequest) returns (ProxyResponse);
    
    // Forward to ERP service
    rpc ForwardToERP(ProxyRequest) returns (ProxyResponse);
    
    // Forward to STT service
    rpc ForwardToSTT(ProxyRequest) returns (ProxyResponse);
    
    // Forward to TTS service
    rpc ForwardToTTS(ProxyRequest) returns (ProxyResponse);
    
    // Forward to User service
    rpc ForwardToUser(ProxyRequest) returns (ProxyResponse);
    
    // Forward to Notification service
    rpc ForwardToNotification(ProxyRequest) returns (ProxyResponse);
}

message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
        SERVICE_UNKNOWN = 3;
    }
    ServingStatus status = 1;
    map<string, string> details = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message ServiceStatusRequest {
    repeated string services = 1;
    bool include_metrics = 2;
}

message ServiceStatusResponse {
    repeated ServiceStatus services = 1;
    SystemMetrics system_metrics = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message ServiceStatus {
    string name = 1;
    HealthCheckResponse.ServingStatus status = 2;
    string version = 3;
    google.protobuf.Timestamp uptime = 4;
    repeated Dependency dependencies = 5;
    map<string, string> metadata = 6;
}

message Dependency {
    string name = 1;
    string type = 2; // database, service, cache, etc.
    HealthCheckResponse.ServingStatus status = 3;
    string endpoint = 4;
    google.protobuf.Timestamp last_check = 5;
    string error_message = 6;
}

message SystemMetrics {
    double cpu_usage = 1;
    double memory_usage = 2;
    int64 active_connections = 3;
    int64 total_requests = 4;
    int64 failed_requests = 5;
    double average_response_time = 6;
    map<string, double> custom_metrics = 7;
}

message ForwardRequestData {
    string service_name = 1;
    string method = 2;
    string path = 3;
    map<string, string> headers = 4;
    bytes body = 5;
    map<string, string> query_params = 6;
    RequestMetadata metadata = 7;
}

message ForwardResponseData {
    int32 status_code = 1;
    map<string, string> headers = 2;
    bytes body = 3;
    ResponseMetadata metadata = 4;
}

message BatchForwardRequest {
    repeated ForwardRequestData requests = 1;
    bool parallel_execution = 2;
    int32 timeout_seconds = 3;
}

message BatchForwardResponse {
    repeated ForwardResponseData responses = 1;
    repeated string errors = 2;
    int32 successful_count = 3;
    int32 failed_count = 4;
}

message ProxyRequest {
    string method = 1;
    string path = 2;
    map<string, string> headers = 3;
    google.protobuf.Any body = 4;
    map<string, string> query_params = 5;
    RequestMetadata metadata = 6;
}

message ProxyResponse {
    int32 status_code = 1;
    map<string, string> headers = 2;
    google.protobuf.Any body = 3;
    ResponseMetadata metadata = 4;
}

message RequestMetadata {
    string request_id = 1;
    string user_id = 2;
    string session_id = 3;
    string client_ip = 4;
    string user_agent = 5;
    google.protobuf.Timestamp timestamp = 6;
    string trace_id = 7;
    string span_id = 8;
    map<string, string> tags = 9;
}

message ResponseMetadata {
    string request_id = 1;
    google.protobuf.Timestamp timestamp = 2;
    int64 processing_time_ms = 3;
    string service_version = 4;
    string trace_id = 5;
    string span_id = 6;
    map<string, string> tags = 7;
}

// Rate limiting and quota management
message RateLimitRequest {
    string user_id = 1;
    string resource = 2;
    int32 requested_tokens = 3;
    string window = 4; // "1m", "1h", "1d"
}

message RateLimitResponse {
    bool allowed = 1;
    int32 remaining_tokens = 2;
    google.protobuf.Timestamp reset_time = 3;
    int64 retry_after_ms = 4;
}

message QuotaRequest {
    string user_id = 1;
    string resource = 2;
    int64 requested_amount = 3;
    string period = 4; // "daily", "monthly", "yearly"
}

message QuotaResponse {
    bool allowed = 1;
    int64 remaining_quota = 2;
    int64 total_quota = 3;
    google.protobuf.Timestamp reset_time = 4;
}