{{- if .Values.gateway.enabled }}
# Gateway service secrets
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-gateway-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: gateway
type: Opaque
stringData:
  # Database connection
  DATABASE_URL: "postgresql://{{ .Values.global.database.username }}:{{ .Values.global.database.password }}@{{ include "wearforce-clean.fullname" . }}-postgresql:5432/{{ .Values.global.database.name }}"
  
  # Redis connection
  REDIS_URL: "redis://:{{ .Values.global.redis.password }}@{{ include "wearforce-clean.fullname" . }}-redis-master:6379/0"
  
  # JWT configuration
  JWT_SECRET_KEY: {{ .Values.global.auth.jwtSecretKey | quote }}
  JWT_ALGORITHM: "HS256"
  JWT_ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  JWT_REFRESH_TOKEN_EXPIRE_DAYS: "7"
  
  # Service discovery keys
  SERVICE_DISCOVERY_TOKEN: {{ .Values.global.auth.serviceDiscoveryToken | quote }}
  
  # Encryption keys
  ENCRYPTION_KEY: {{ .Values.global.security.encryptionKey | quote }}
  
  # OAuth2 client credentials
  OAUTH2_CLIENT_ID: {{ .Values.global.oauth2.clientId | quote }}
  OAUTH2_CLIENT_SECRET: {{ .Values.global.oauth2.clientSecret | quote }}
  
  # API rate limiting keys
  RATE_LIMIT_STORE_KEY: {{ .Values.global.security.rateLimitKey | quote }}

  # Monitoring and observability
  {{- if .Values.monitoring.datadog.enabled }}
  DATADOG_API_KEY: {{ .Values.monitoring.datadog.apiKey | quote }}
  {{- end }}
  
  {{- if .Values.monitoring.sentry.enabled }}
  SENTRY_DSN: {{ .Values.monitoring.sentry.dsn | quote }}
  {{- end }}
  
  # Third-party service API keys
  {{- if .Values.gateway.integrations.enabled }}
  {{- range $key, $value := .Values.gateway.integrations.apiKeys }}
  {{ $key | upper }}_API_KEY: {{ $value | quote }}
  {{- end }}
  {{- end }}

---
# Gateway TLS certificates
{{- if .Values.global.tls.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-gateway-certs
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: gateway
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.global.tls.certificate | b64enc }}
  tls.key: {{ .Values.global.tls.privateKey | b64enc }}
  {{- if .Values.global.tls.caCertificate }}
  ca.crt: {{ .Values.global.tls.caCertificate | b64enc }}
  {{- end }}
{{- end }}

---
# Service mesh certificates (for mTLS)
{{- if and .Values.global.serviceMesh.enabled (eq .Values.global.serviceMesh.type "istio") }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-gateway-istio-certs
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: gateway
    istio: gateway-certs
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.global.serviceMesh.istio.gateway.certificate | b64enc }}
  tls.key: {{ .Values.global.serviceMesh.istio.gateway.privateKey | b64enc }}
  ca-cert.pem: {{ .Values.global.serviceMesh.istio.caCertificate | b64enc }}
  cert-chain.pem: {{ .Values.global.serviceMesh.istio.certificateChain | b64enc }}
{{- end }}

---
# Registry credentials for pulling private images
{{- if .Values.global.image.pullSecrets }}
{{- range .Values.global.image.pullSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" $ | nindent 4 }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ .dockerconfigjson | b64enc }}
{{- end }}
{{- end }}
{{- end }}