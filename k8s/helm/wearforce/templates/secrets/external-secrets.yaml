# External Secrets Operator configuration for managing secrets from AWS Secrets Manager
{{- if .Values.security.externalSecrets.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-external-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: external-secrets
  annotations:
    {{- if .Values.global.cloud.provider == "aws" }}
    eks.amazonaws.com/role-arn: {{ .Values.security.externalSecrets.aws.roleArn }}
    {{- end }}

---
# ClusterSecretStore for AWS Secrets Manager
{{- if eq .Values.global.cloud.provider "aws" }}
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-aws-secrets
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
spec:
  provider:
    aws:
      service: SecretsManager
      region: {{ .Values.global.cloud.region }}
      auth:
        jwt:
          serviceAccountRef:
            name: {{ include "wearforce-clean.fullname" . }}-external-secrets
            namespace: {{ .Release.Namespace }}
{{- end }}

---
# Database credentials from AWS Secrets Manager
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-database-credentials
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: {{ include "wearforce-clean.fullname" . }}-aws-secrets
    kind: ClusterSecretStore
  target:
    name: {{ include "wearforce-clean.fullname" . }}-database-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        POSTGRES_HOST: "{{ "{{ .host }}" }}"
        POSTGRES_PORT: "{{ "{{ .port }}" }}"
        POSTGRES_DB: "{{ "{{ .dbname }}" }}"
        POSTGRES_USER: "{{ "{{ .username }}" }}"
        POSTGRES_PASSWORD: "{{ "{{ .password }}" }}"
        DATABASE_URL: "postgresql://{{ "{{ .username }}" }}:{{ "{{ .password }}" }}@{{ "{{ .host }}" }}:{{ "{{ .port }}" }}/{{ "{{ .dbname }}" }}"
  data:
  - secretKey: host
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/database
      property: host
  - secretKey: port
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/database
      property: port
  - secretKey: dbname
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/database
      property: dbname
  - secretKey: username
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/database
      property: username
  - secretKey: password
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/database
      property: password

---
# Redis credentials from AWS Secrets Manager
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-redis-credentials
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: {{ include "wearforce-clean.fullname" . }}-aws-secrets
    kind: ClusterSecretStore
  target:
    name: {{ include "wearforce-clean.fullname" . }}-redis-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        REDIS_HOST: "{{ "{{ .host }}" }}"
        REDIS_PORT: "{{ "{{ .port }}" }}"
        REDIS_PASSWORD: "{{ "{{ .password }}" }}"
        REDIS_URL: "redis://:{{ "{{ .password }}" }}@{{ "{{ .host }}" }}:{{ "{{ .port }}" }}/0"
  data:
  - secretKey: host
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/redis
      property: host
  - secretKey: port
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/redis
      property: port
  - secretKey: password
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/redis
      property: password

---
# JWT and API keys from AWS Secrets Manager
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-api-keys
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: {{ include "wearforce-clean.fullname" . }}-aws-secrets
    kind: ClusterSecretStore
  target:
    name: {{ include "wearforce-clean.fullname" . }}-api-keys
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        JWT_SECRET_KEY: "{{ "{{ .jwt_secret }}" }}"
        JWT_ALGORITHM: "HS256"
        JWT_ACCESS_TOKEN_EXPIRE_MINUTES: "30"
        JWT_REFRESH_TOKEN_EXPIRE_DAYS: "7"
        ENCRYPTION_KEY: "{{ "{{ .encryption_key }}" }}"
        API_KEY_HASH_SALT: "{{ "{{ .api_key_salt }}" }}"
  data:
  - secretKey: jwt_secret
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/api
      property: jwt_secret_key
  - secretKey: encryption_key
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/api
      property: encryption_key
  - secretKey: api_key_salt
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/api
      property: api_key_hash_salt

---
# Third-party service credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-external-services
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: external
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: {{ include "wearforce-clean.fullname" . }}-aws-secrets
    kind: ClusterSecretStore
  target:
    name: {{ include "wearforce-clean.fullname" . }}-external-services
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        # Email service (SMTP)
        SMTP_HOST: "{{ "{{ .smtp_host }}" }}"
        SMTP_PORT: "{{ "{{ .smtp_port }}" }}"
        SMTP_USERNAME: "{{ "{{ .smtp_username }}" }}"
        SMTP_PASSWORD: "{{ "{{ .smtp_password }}" }}"
        SMTP_USE_TLS: "{{ "{{ .smtp_use_tls }}" }}"
        
        # SMS service (Twilio)
        TWILIO_ACCOUNT_SID: "{{ "{{ .twilio_account_sid }}" }}"
        TWILIO_AUTH_TOKEN: "{{ "{{ .twilio_auth_token }}" }}"
        TWILIO_FROM_PHONE: "{{ "{{ .twilio_from_phone }}" }}"
        
        # Push notifications (Firebase)
        FIREBASE_CREDENTIALS: "{{ "{{ .firebase_credentials | toString }}" }}"
        
        # OpenAI/LLM API keys
        OPENAI_API_KEY: "{{ "{{ .openai_api_key }}" }}"
        ANTHROPIC_API_KEY: "{{ "{{ .anthropic_api_key }}" }}"
        
        # Monitoring services
        DATADOG_API_KEY: "{{ "{{ .datadog_api_key }}" }}"
        SENTRY_DSN: "{{ "{{ .sentry_dsn }}" }}"
  data:
  # Email service
  - secretKey: smtp_host
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: smtp_host
  - secretKey: smtp_port
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: smtp_port
  - secretKey: smtp_username
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: smtp_username
  - secretKey: smtp_password
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: smtp_password
  - secretKey: smtp_use_tls
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: smtp_use_tls
  
  # SMS service
  - secretKey: twilio_account_sid
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: twilio_account_sid
  - secretKey: twilio_auth_token
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: twilio_auth_token
  - secretKey: twilio_from_phone
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: twilio_from_phone
  
  # Firebase
  - secretKey: firebase_credentials
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: firebase_credentials
  
  # AI services
  - secretKey: openai_api_key
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: openai_api_key
  - secretKey: anthropic_api_key
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: anthropic_api_key
  
  # Monitoring
  - secretKey: datadog_api_key
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: datadog_api_key
  - secretKey: sentry_dsn
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/external-services
      property: sentry_dsn

---
# TLS certificates from AWS Certificate Manager or Let's Encrypt
{{- if .Values.global.tls.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "wearforce-clean.fullname" . }}-tls-certs
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wearforce-clean.labels" . | nindent 4 }}
    app.kubernetes.io/component: tls
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: {{ include "wearforce-clean.fullname" . }}-aws-secrets
    kind: ClusterSecretStore
  target:
    name: {{ include "wearforce-clean.fullname" . }}-tls
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
      engineVersion: v2
      data:
        tls.crt: "{{ "{{ .cert }}" }}"
        tls.key: "{{ "{{ .key }}" }}"
        ca.crt: "{{ "{{ .ca }}" }}"
  data:
  - secretKey: cert
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/tls
      property: certificate
  - secretKey: key
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/tls
      property: private_key
  - secretKey: ca
    remoteRef:
      key: wearforce-clean/{{ .Values.global.environment }}/tls
      property: ca_certificate
{{- end }}

{{- end }}